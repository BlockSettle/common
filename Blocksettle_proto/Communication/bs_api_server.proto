/*

***********************************************************************************
* Copyright (C) 2020 - 2020, BlockSettle AB
* Distributed under the GNU Affero General Public License (AGPL v3)
* See LICENSE or http://www.gnu.org/licenses/agpl.html
*
**********************************************************************************

*/
syntax = "proto3";

package Blocksettle.Communication.ApiServer;

import "bs_types.proto";

enum EidStatus {
    EID_STATUS_INVALID = 0;
    EID_STATUS_WAITING_SIGN = 10;
    EID_STATUS_TIMEOUT = 20;
    EID_STATUS_CANCELLED = 21;
    EID_STATUS_SERVER_ERROR = 22;
    EID_STATUS_ACCOUNT_NOT_FOUND = 23;
    EID_STATUS_SUCCESS = 30;
}

message Request
{
    message Authorize
    {
        string api_key = 1;
    }

    message EidLogin
    {
    }

    message ResumeSession
    {
        string session_id = 1;
    }

    message Logout
    {
    }

    message MarketOrder
    {
        double amount = 1;
        bs.types.Side side = 2;
        string product_type = 3;
        double user_expected_price = 4;
    }

    message LoadOrders
    {
    }

    message LoadBalance
    {
    }

    message Subscribe
    {
        string product_type = 1;
    }

    message TradingDay
    {
        string product_type = 1;
    }

    message EstimateIm
    {
        string product_type = 1;
        double qty = 2;
        bs.types.Side side = 3;
    }

    message ProductFee
    {
        string product_type = 1;
    }

    message MaxTradeAmount
    {
        string product_type = 1;
        bs.types.Side side = 2;
    }

    message TradingStats
    {
    }

    oneof data
    {
        Authorize authorize = 10;
        EidLogin eid_login = 15;
        ResumeSession resume_session = 17;
        Logout logout = 18;
        MarketOrder market_order = 11;
        LoadOrders load_orders = 12;
        LoadBalance load_balance = 13;
        Subscribe subscribe = 14;
        TradingDay trading_day = 16;
        EstimateIm estimate_im = 19;
        ProductFee product_fee = 20;
        MaxTradeAmount max_trade_amount = 21;
        TradingStats trading_stats = 22;
    }
}

message Response
{
    message Authorize
    {
        bool success = 1;
        string session_id = 2;
    }

    message EidLogin
    {
        string qr_code = 1;
    }

    message ResumeSession
    {
        bool success = 1;
    }

    message Logout
    {
    }

    message MarketOrder
    {
        bool success = 1;
        string order_id = 2;
        string error_msg = 3;
        double price = 4;
    }

    message LoadOrders
    {
        repeated bs.types.Order orders = 1;
    }

    message LoadBalance
    {
        repeated bs.types.Balance balances = 1;
    }

    message Subscribe
    {
        string product_type = 1;
        bool success = 2;
        string error_msg = 3;
    }

    message TradingDay
    {
        string product_type = 2;
        double time_to_cut_off = 1;
        double cut_off_at = 3;
        double last_cut_off_price = 5;
    }

    message EstimateIm
    {
        bool success = 1;
        string error_msg = 2;

        double expected_im_reservation = 10;
        double fee_amount = 12;
        string product_type = 14;
    }

    message ProductFee
    {
        bool   success        = 1;
        string error_msg      = 2;
        string product_type   = 3;
        double fee            = 4;
        string fee_ccy        = 5;
        double im             = 6;
    }

    message MaxTradeAmount
    {
        string product_type = 1;
        bs.types.Side side = 2;
        double qty = 3;
        double fee = 4;
    }

    message TradingStats
    {
        double cutoff = 1;
        double daily_volume = 2;
        double open_interest = 3;
    }

    message OrderUpdate
    {
        bs.types.Order order = 1;
        bs.types.Action action = 2;
    }

    message MarketData
    {
        message Item
        {
            string quantity = 1;
            double bid = 2;
            double ask = 3;
        }

        string product_type = 1;
        repeated Item items = 2;
    }

    message EidLoginUpdate
    {
        EidStatus status = 1;
        string session_id = 2;
    }

    message Error
    {
        string error_msg = 1;
    }

    oneof data
    {
        Authorize authorize = 10;
        EidLogin eid_login = 15;
        ResumeSession resume_session = 17;
        Logout logout = 18;
        MarketOrder market_order = 11;
        LoadOrders load_orders = 12;
        LoadBalance load_balance = 13;
        Subscribe subscribe = 14;
        TradingDay trading_day = 16;
        EstimateIm estimate_im = 19;
        ProductFee product_fee = 20;
        MaxTradeAmount max_trade_amount = 21;
        TradingStats trading_stats = 22;

        MarketData market_data = 50;
        Error fatal_error = 51;
        EidLoginUpdate eid_login_update = 52;
        OrderUpdate order_update = 53;
    }
}


message LP_API
{
   oneof data
   {
       string     api_key = 1;
       string     login_result = 2;
   }
}
