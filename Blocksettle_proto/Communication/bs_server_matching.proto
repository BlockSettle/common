syntax = "proto3";

package Blocksettle.Server.Matching;

import "bs_server.proto";

message XbtMatchedRequest
{
   string settlement_id = 1;
   string cl_order_id = 2;
   string email_requestor = 3;
   string email_dealer = 4;
   bool requestor_sell = 5;
   double price = 6;
   string security_id = 7;
   string currency = 8;
   double qty = 9;
   double contra_qty = 10;
   int32  subsystem = 11;
   string requestor_auth_addr_pubkey_hex = 12;
   string dealer_auth_addr_pubkey_hex = 13;
}

message XbtResponseCommon
{
   string settlement_id = 1;
}

message XbtUnsignedPayinRequest
{
   string email = 1;
   string settlement_id = 2;
   bytes unsigned_payin = 3;
   repeated PreimageData preimage_data = 4;
}

message XbtUnsignedPayinResponse
{
   string settlement_id = 1;
   bytes payin_hash = 2;
}

message XbtSignedPayoutResponse
{
   string settlement_id = 1;
   bytes unsigned_payin = 2;
}

message XbtCancelRequest
{
   string email = 1;
   string settlement_id = 2;
}

message XbtSignedDataRequest
{
   string email = 1;
   string settlement_id = 2;
   bytes signed_tx = 3;
}

message XbtFailedNotification
{
   string settlement_id = 1;
   string error_msg = 2;
}

message MatchingMessage
{
   oneof data {
      XbtMatchedRequest          xbt_matched_request = 1;
      XbtResponseCommon          xbt_matched_response = 2;
      XbtUnsignedPayinRequest    xbt_unsigned_payin_request = 3;
      XbtUnsignedPayinResponse   xbt_unsigned_payin_response = 4;
      XbtSignedDataRequest       xbt_signed_payout_request = 5;
      XbtSignedPayoutResponse    xbt_signed_payout_response = 6;
      XbtSignedDataRequest       xbt_signed_payin_request = 7;
      XbtResponseCommon          xbt_signed_payin_response = 8;
      XbtCancelRequest           xbt_cancel_request = 9;
      XbtFailedNotification      xbt_failed_notification = 10;
      XbtResponseCommon          xbt_settled_notification = 11;
   }
}
