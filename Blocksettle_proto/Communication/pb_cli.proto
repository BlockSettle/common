syntax = "proto2";

package Blocksettle.Communication.pbcli;

enum CLIRequestType
{
   ErrorMessageType                 = 1;
   GetStatusMessageType             = 2;
   LoadUTXOMessageType              = 3;
   CheckAuthAddressMessageType      = 4;
   ReloadWalletMessageType          = 5;
   SendCCTokenMessageType           = 6;
   AuthVerificationTransactionType  = 8;
   AuthRevokeTransactionType        = 9;
   CCDistributionTransactionType    = 10;
   AuthVerificationRejectedType     = 11;
   FundCCGenAddrType                = 12;
   FundCCGATransactionType          = 13;
   GetRequestsStatType              = 14;
   GetPendingSettlementsInfo        = 15;
   CreateCelerUserType              = 16;
   SetInitialPMPriceType            = 17;
   DisablePMProductType             = 18;
}

enum ArmoryConnectionState
{
   ArmoryConnectionOffline = 1;
   ArmoryConnectionScanning = 2;
   ArmoryConnectionConnected = 3;
   ArmoryConnectionReady = 4;
}

enum AuthAddressVerificationState
{
   VerificationFailedState = 1;
   InProgressState = 2;
   NotSubmittedState = 3;
   SubmittedState = 4;
   PendingVerificationState = 5;
   VerificationSubmittedState = 6;
   VerifiedState = 7;
   RevokedState = 8;
   RevokedByBSState = 9;
}

message CLIRequestPacket
{
   required CLIRequestType requestType = 1;
   optional bytes          requestData = 2;
}

message CLIResponsePacket
{
   required CLIRequestType responseType = 1;
   required bytes          responseData = 2;
}

message PBStatusResponse
{
   required bool ConnectedToCeler         = 1;
   required bool ConnectedToGenoa         = 2;
   required bool CelerMerchantConnected   = 3;
   required bool CelerPiggyBankConnected  = 4;
   required bool CelerStaticDataConnected = 5;

   required string PBVersion              = 6;

   optional string GenoaVersion           = 7;
   optional string BlocksettleVersion     = 8;
   optional string UnifyVersion           = 9;
   optional string LandfallVersion        = 10;

   required ArmoryConnectionState armoryConnectionState = 12;

   required string uptime           = 13;
   required uint64 uptime_seconds   = 14;

   required bool ConnectedToMD      = 15;
}

message ErrorMessage
{
   required string messageText = 1;
   optional bytes originalMessage = 2;
}

message LoadUTXOResponse
{
   repeated Transactions serializedUTXO = 1;

   message Transactions {
      required string wallet = 1;
      repeated bytes  transactions = 2;
   }
}

message CheckAuthAddressRequestPacket
{
   required string authAddress = 1;
}

message CheckAuthAddressResponsePacket
{
   required string authAddress = 1;
   required AuthAddressVerificationState verificationState = 2;
}


message ReloadWalletRequest
{
   required string reason = 1;
}


message SendCCTokenRequest
{
   required string userId = 1;
   required string ccToken = 2;
   required string ccProduct = 3;
   required uint32 amount = 4;
   required string request_id = 5;
}

message AuthVerificationTransactionResponse
{
   required bool transaction_broadcasted = 1;
}


message AuthRevokeTransactionResponse
{
   required bool transaction_broadcasted = 1;
}


message CCDistributionTransactionResponse
{
   required bool transaction_broadcasted = 1;
}


message AuthVerificationRejectReponse
{
   required bool fee_released = 1;
   optional string debug_message = 2;
}

message FundCCGenAddrRequest
{
   required string cc_product = 1;
   required uint32 amount = 2;
   optional string reference = 3;
}

message GetRequestsStatResopnse
{
   required uint32 submit_auth_count = 1;
   required uint32 revoke_auth_count = 2;
   required uint32 generate_cc_seed_count = 4;
   required uint32 cc_initial_distribution_count = 5;
   required uint32 fund_cc_gen_address_count = 6;
}

message ProductStatistics
{
   required string product_name = 1;
   required int32  trades_count = 2;
}

message GetPendingSettlementsResponse
{
   required string snapshot_date_time = 1;

   repeated ProductStatistics cc_trades = 2;
   repeated ProductStatistics xbt_trades = 3;
}

message CreateCelerUserRequest
{
   required string user_email = 1;
}

message CreateCelerUserResponse
{
   required bool     create_user_result = 1;
   required string   user_email = 2;
   optional string   error_message = 3;
}

message SetInitialPMPriceRequest
{
   required string product       = 1;
   required double bid_price     = 2;
   required double offer_price   = 3;
}

message SetInitialPMPriceResponse
{
   required string   product  = 1;
   required bool     result   = 2;
}

message DisablePMProductRequest
{
   required string   product = 1;
}

message DisablePMProductResponse
{
   required string   product  = 1;
   required bool     result   = 2;
   optional string   message  = 3;
}