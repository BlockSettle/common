/*

***********************************************************************************
* Copyright (C) 2020 - 2020, BlockSettle AB
* Distributed under the GNU Affero General Public License (AGPL v3)
* See LICENSE or http://www.gnu.org/licenses/agpl.html
*
**********************************************************************************

*/
syntax = "proto3";

package Blocksettle.Communication.ApiServerPb;

import "bs_types.proto";
import "bs_api_server.proto";
import "trade_history.proto";

message Request
{
    message CheckApiKey
    {
        bytes client_id = 1;
        string api_key = 2;
        string ip_addr = 3;
    }

    message CheckEid
    {
        bytes client_id = 1;
        string email = 2;
    }

    message RegisterEid
    {
        bytes client_id = 1;
        string answers = 2;
        string kyc = 3;
    }

    message MarketOrder
    {
        string entity_name = 1;
        ApiServer.Request.MarketOrder order = 2;
    }

    message LoadOrders
    {
        string entity_name = 1;
    }

    message LoadBalance
    {
        string entity_name = 1;
    }

    message TradingDay
    {
        bytes client_id = 1;
        ApiServer.Request.TradingDay order = 2;
    }

    message EstimateIm
    {
        string entity_name = 1;
        ApiServer.Request.EstimateIm order = 2;
    }

    message ProductFee
    {
        bytes client_id = 1;
        ApiServer.Request.ProductFee order = 2;
    }

    message MaxTradeAmount
    {
        string entity_name = 1;
        ApiServer.Request.MaxTradeAmount request = 2;
    }

    message SubmitPricesData
    {
        string                      entity_name = 1;
        bs.types.SubmitPricesData   request     = 2;
    }

    message PullPricesData
    {
        string                      entity_name = 1;
        bs.types.PullPricesData     request     = 2;
    }

    message SubmitAddressData
    {
        string                                      entity_name = 1;
        ApiServer.Request.WhitelistedAddressRequest request     = 2;
    }

    message LoadAddresses
    {
        string entity_name = 1;
    }

    message RevokeAddress
    {
        string  entity_name = 1;
        string  address     = 2;
    }

    message LoadDepositAddress
    {
        string entity_name = 1;
    }

    message CreateIbanAgreementUrl
    {
        ApiServer.Request.CreateIbanAgreementUrl request = 1;
        string entity_name = 2;
    }

    message GetIbanAccounts
    {
        ApiServer.Request.GetIbanAccounts request = 1;
        string entity_name = 2;
    }

    message GetIbanAccountDetails
    {
        ApiServer.Request.GetIbanAccountDetails request = 1;
        string entity_name = 2;
    }


    oneof data
    {
        CheckApiKey                     check_api_key               = 1;
        CheckEid                        check_eid                   = 2;
        RegisterEid                     register_eid                = 3;
        MarketOrder                     market_order                = 4;
        LoadOrders                      load_orders                 = 5;
        LoadBalance                     load_balance                = 6;
        TradingDay                      trading_day                 = 7;
        EstimateIm                      estimate_im                 = 8;
        ProductFee                      product_fee                 = 9;
        MaxTradeAmount                  max_trade_amount            = 10;
        ApiServer.Response.MarketData   market_data                 = 11;
        SubmitPricesData                submit_prices               = 12;
        PullPricesData                  pull_prices                 = 13;
        string                          user_connected              = 14;
        string                          user_disconnected           = 15;
        SubmitAddressData               submit_address              = 16;
        LoadAddresses                   load_addresses              = 17;
        RevokeAddress                   revoke_address              = 18;
        LoadDepositAddress              load_deposit_address        = 19;
        CreateIbanAgreementUrl          create_iban_agreement       = 20;
        GetIbanAccounts                 get_iban_accounts           = 21;
        GetIbanAccountDetails           get_iban_account_details    = 22;
    }
}

message Response
{
    message CheckApiKey
    {
        bytes client_id = 1;
        string api_key = 2;
        string entity_name = 3;
        bs.types.ApiKeyError error = 4;
    }

    message CheckEid
    {
        bytes client_id = 1;
        string email = 2;
        string entity_name = 3;
    }

    message RegisterEid
    {
        bytes client_id = 1;
        bool success = 2;
        string error_code = 3;
        string entity_name = 4;
    }

    message MarketOrder
    {
        string entity_name = 1;
        ApiServer.Response.MarketOrder result = 2;
    }

    message LoadOrders
    {
        string entity_name = 1;
        ApiServer.Response.LoadOrders result = 2;
    }

    message LoadBalance
    {
        string entity_name = 1;
        ApiServer.Response.LoadBalance result = 2;
        bool user_requested = 3;
    }

    message TradingDay
    {
        bytes client_id = 1;
        ApiServer.Response.TradingDay result = 2;
        double open_interest = 3;
    }

    message EstimateIm
    {
        string entity_name = 1;
        ApiServer.Response.EstimateIm result = 2;
    }

    message ProductFee
    {
        bytes client_id = 1;
        ApiServer.Response.ProductFee result = 2;
    }

    message OrderUpdate
    {
        string entity_name = 1;
        ApiServer.Response.OrderUpdate result = 2;
    }

    message MaxTradeAmount
    {
        string entity_name = 1;
        ApiServer.Response.MaxTradeAmount result = 2;
    }

    message UpdateBook
    {
        Communication.TradeHistory.PriceBookUpdate data = 1;
    }

    message TradeClose
    {
        string product_name = 1;
    }

    message TradeOpen
    {
        string  product_name        = 1;
        int64   cut_off_at          = 2;
        double  seconds_to_cut_off  = 3;
        double  last_cut_off_price  = 4;
    }

    message CreateIbanAgreementUrl
    {
        ApiServer.Response.CreateIbanAgreementUrl result = 1;
        string entity_name = 2;
    }

    message GetIbanAccounts
    {
        ApiServer.Response.GetIbanAccounts result = 1;
        string entity_name = 2;
    }

    message GetIbanAccountDetails
    {
        ApiServer.Response.GetIbanAccountDetails result = 1;
        string entity_name = 3;
    }

    message LoadDepositAddress
    {
        string entity_name = 1;
        string address     = 2;
    }

    message LoadAddresses
    {
        string                                                  entity_name = 1;
        repeated ApiServer.Response.WhitelistedAddressResponse  addresses   = 2;
    }

    message SubmitAddress
    {
        string  entity_name     = 1;
        bool    success         = 2;
        string  address         = 3;
        string  description     = 4;
        int64   added_timestamp = 5;
    }

    message RevokeAddress
    {
        string  entity_name = 1;
        string  address     = 2;
        bool    success     = 3;
    }

    oneof data
    {
        CheckApiKey             check_api_key               = 1;
        CheckEid                check_eid                   = 2;
        RegisterEid             register_eid                = 3;
        MarketOrder             market_order                = 4;
        LoadOrders              load_orders                 = 5;
        LoadBalance             load_balance                = 6;
        TradingDay              trading_day                 = 7;
        EstimateIm              estimate_im                 = 8;
        ProductFee              product_fee                 = 9;
        OrderUpdate             order_update                = 10;
        MaxTradeAmount          max_trade_amount            = 11;
        UpdateBook              update_book                 = 12;
        TradeClose              trade_close                 = 13;
        TradeOpen               trade_open                  = 14;
        CreateIbanAgreementUrl  create_iban_agreement       = 15;
        GetIbanAccounts         get_iban_accounts           = 16;
        GetIbanAccountDetails   get_iban_account_details    = 17;
        LoadDepositAddress      load_deposit_address        = 18;
        LoadAddresses           load_addresses              = 19;
        SubmitAddress           submit_address              = 20;
        RevokeAddress           revoke_address              = 21;
    }
}
