syntax = "proto3";

package Blocksettle.Communication.ProxyTerminalPb;

// Messages sent from terminal to PB and back.
// `Request` is sent from terminal (PB is a server here).

message Request
{
    message StartOtc
    {
        int32 request_id = 1;
    }

    message VerifyOtc
    {
        bool is_seller = 1;

        int64 amount = 2;
        int64 price = 3;

        bytes settlement_id = 4;

        bytes auth_address_seller = 5;
        bytes auth_address_buyer = 6;

        // Used to check fees and other details (UTXO for payin, settlement address etc)
        bytes unsigned_payin = 7;
        bytes unsigned_payout = 8;

        string chat_id_seller = 10;
        string chat_id_buyer = 11;
    }

    message BroadcastXBT
    {
        bytes settlement_id = 1;
        bytes signed_payin = 2;
        bytes signed_payout = 3;
    }

   message XBTUnsignedPayin
    {
        string  settlement_id       = 1;
        bytes   unsigned_payin      = 2;
        bytes   unsigned_payin_id   = 3;
    }

    message XBTSignedPayin
    {
        string  settlement_id   = 1;
        bytes   signed_payin    = 2;
    }

    message XBTSignedPayout
    {
        string  settlement_id   = 1;
        bytes   signed_payout   = 2;
    }

    oneof data
    {
        // OTC
        StartOtc  start_otc     = 1;
        VerifyOtc verify_otc    = 2;
        BroadcastXBT        broadcast_xbt   = 30;

        // Trades
        XBTUnsignedPayin    unsigned_payin  = 31;
        XBTSignedPayin      signed_payin    = 32;
        XBTSignedPayout     signed_payout   = 33;
    }
}

message Response
{
    message StartOtc
    {
        int32 request_id    = 1;
        bytes settlement_id = 2;
    }

    message VerifyOtc
    {
        bool    success         = 1;
        string  error_msg       = 2;
        bytes   settlement_id   = 3;
    }

    message SignOtcPayin
    {
        bytes   settlement_id   = 1;
    }

    message UnsignedPayinRequest
    {
      string  settlement_id   = 1;
    }

    message SignPayoutRequest
    {
        string  settlement_id   = 1;
        bytes   payin_data      = 2;
    }

    message SignPayinRequest
    {
        string  settlement_id       = 1;
        bytes   signed_payout_data  = 2;
        bytes   unsigned_payin_data = 3;
    }

    oneof data
    {
        // OTC
        StartOtc              start_otc            = 1;
        VerifyOtc             verify_otc           = 2;
        SignOtcPayin          sign_otc_payin       = 6;

        // Trades
        UnsignedPayinRequest  send_unsigned_payin  = 3;
        SignPayoutRequest     sign_payout          = 4;
        SignPayinRequest      sign_payin           = 5;
    }
}
